name: CI/CD

on:
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    name: Build and Publish
    env:
      solution-path: './PATH_FROM_ROOT.sln'
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: Install GitVersion
      run: dotnet tool install --global GitVersion.Tool

    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.7
      with:
        useConfigFile: true 

    # https://github.com/valadas/set-dnn-manifest-versions
    - name: Update Versions on DNN Modules
      uses: valadas/set-dnn-manifest-versions@v1
      with:
        version: ${{ steps.gitversion.outputs.majorMinorPatch }}
        includeSolutionInfo: true

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
    
    - name: Restore NuGet Packages
      run: nuget restore "${{ env.solution-path }}"
    
    - name: Build the solution
      run: msbuild "${{ env.solution-path }}" /p:Configuration=Release;
    
    - uses: robinraju/release-downloader@v1
      if: github.event_name != 'pull_request'
      with:
        repository: "bdukes/polydeploy"
        fileName: "DeployClient_00.09.03.zip"
        tag: "v0.9.3-custom"
        out-file-path: "polydeploy"

    - name: Unzip PolyDeploy Client
      if: github.event_name != 'pull_request'
      run: |
        Expand-Archive -Path 'polydeploy\DeployClient_00.09.03.zip' -DestinationPath 'polydeploy\out\'
      shell: powershell
      
    - name: Collect Installers
      if: github.event_name != 'pull_request'
      run: |
        Get-ChildItem -Include *install.zip -Recurse | Copy-Item -Destination "polydeploy\out\"
      shell: powershell
      working-directory: .\
    
    - name: Deploy via Poly Deploy
      if: github.event_name != 'pull_request'
      run: |
       DeployClient.exe --no-prompt --target-uri ${{ secrets.TEST_DEPLOY_URL }} --api-key ${{ secrets.TEST_DEPLOY_API_KEY }} --encryption-key ${{ secrets.TEST_DEPLOY_ENCRYPTION_KEY }}
      shell: cmd
      working-directory: .\polydeploy\out\

    - name: Store Install Package
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v2
      with:
        name: installers
        path: './polydeploy/out/**_install.zip'
        retention-days: 5 # only need long enough to test/validate
    
    
    
    
